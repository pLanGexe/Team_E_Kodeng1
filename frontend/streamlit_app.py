import streamlit as st
import requests
import pandas as pd
from datetime import datetime
import time

API_URL = "https://psychic-couscous-7644xg6rvpp2p4wg-8001.app.github.dev/sensor/all"

st.set_page_config(page_title="Sensor Monitor", layout="wide")
st.title("üå°Ô∏è Sensor Dashboard")
st.write("‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å FastAPI ‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå")

# Containers ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏Ñ‡πà‡∏≤‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
table_container = st.empty()
temp_container = st.empty()
hum_container = st.empty()

REFRESH_INTERVAL = 2  # ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ

while True:
    try:
        response = requests.get(API_URL, timeout=5)
        data = response.json()
    except Exception as e:
        st.error(f"API Error: {e}")
        data = None

    if data and data.get("status") == "ok":
        sensor_list = data["data"]

        if len(sensor_list) > 0:
            # ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô DataFrame
            df = pd.DataFrame(sensor_list)
            df["Time"] = pd.to_datetime(df["Time"], unit="s")

            # --- ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ---
            table_container.dataframe(df)

            # --- ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡πà‡∏≤‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î (row ‡πÅ‡∏£‡∏Å) ---
            latest = sensor_list[0]
            temp_container.metric("Temperature (¬∞C)", f"{latest['temperature']} ¬∞C")
            hum_container.metric("Humidity (%)", f"{latest['humidity']} %")
    else:
        st.warning("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Database")

    time.sleep(REFRESH_INTERVAL)
